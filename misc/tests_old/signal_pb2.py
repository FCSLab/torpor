# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: signal.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf.internal import enum_type_wrapper
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor.FileDescriptor(
  name='signal.proto',
  package='signal',
  syntax='proto3',
  serialized_options=None,
  serialized_pb=_b('\n\x0csignal.proto\x12\x06signal\"U\n\rSignalRequest\x12!\n\x04type\x18\x01 \x01(\x0e\x32\x13.signal.RequestType\x12\x10\n\x08\x66unction\x18\x02 \x01(\t\x12\x0f\n\x07payload\x18\x03 \x01(\t\"7\n\tSignalAck\x12\x1c\n\x03\x61\x63k\x18\x01 \x01(\x0e\x32\x0f.signal.AckType\x12\x0c\n\x04resp\x18\x02 \x01(\x05*h\n\x0bRequestType\x12\x14\n\x10\x45xecuteAfterLoad\x10\x00\x12\x0b\n\x07\x45xecute\x10\x01\x12\x08\n\x04Load\x10\x02\x12\n\n\x06Unload\x10\x03\x12\x14\n\x10\x45xecuteForRecord\x10\n\x12\n\n\x06Replay\x10\x0b*\x1e\n\x07\x41\x63kType\x12\x06\n\x02OK\x10\x00\x12\x0b\n\x07Inavail\x10\x01\x62\x06proto3')
)

_REQUESTTYPE = _descriptor.EnumDescriptor(
  name='RequestType',
  full_name='signal.RequestType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='ExecuteAfterLoad', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Execute', index=1, number=1,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Load', index=2, number=2,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Unload', index=3, number=3,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='ExecuteForRecord', index=4, number=10,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Replay', index=5, number=11,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=168,
  serialized_end=272,
)
_sym_db.RegisterEnumDescriptor(_REQUESTTYPE)

RequestType = enum_type_wrapper.EnumTypeWrapper(_REQUESTTYPE)
_ACKTYPE = _descriptor.EnumDescriptor(
  name='AckType',
  full_name='signal.AckType',
  filename=None,
  file=DESCRIPTOR,
  values=[
    _descriptor.EnumValueDescriptor(
      name='OK', index=0, number=0,
      serialized_options=None,
      type=None),
    _descriptor.EnumValueDescriptor(
      name='Inavail', index=1, number=1,
      serialized_options=None,
      type=None),
  ],
  containing_type=None,
  serialized_options=None,
  serialized_start=274,
  serialized_end=304,
)
_sym_db.RegisterEnumDescriptor(_ACKTYPE)

AckType = enum_type_wrapper.EnumTypeWrapper(_ACKTYPE)
ExecuteAfterLoad = 0
Execute = 1
Load = 2
Unload = 3
ExecuteForRecord = 10
Replay = 11
OK = 0
Inavail = 1



_SIGNALREQUEST = _descriptor.Descriptor(
  name='SignalRequest',
  full_name='signal.SignalRequest',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='type', full_name='signal.SignalRequest.type', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='function', full_name='signal.SignalRequest.function', index=1,
      number=2, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='payload', full_name='signal.SignalRequest.payload', index=2,
      number=3, type=9, cpp_type=9, label=1,
      has_default_value=False, default_value=_b("").decode('utf-8'),
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=24,
  serialized_end=109,
)


_SIGNALACK = _descriptor.Descriptor(
  name='SignalAck',
  full_name='signal.SignalAck',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='ack', full_name='signal.SignalAck.ack', index=0,
      number=1, type=14, cpp_type=8, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
    _descriptor.FieldDescriptor(
      name='resp', full_name='signal.SignalAck.resp', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      serialized_options=None, file=DESCRIPTOR),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  serialized_options=None,
  is_extendable=False,
  syntax='proto3',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=111,
  serialized_end=166,
)

_SIGNALREQUEST.fields_by_name['type'].enum_type = _REQUESTTYPE
_SIGNALACK.fields_by_name['ack'].enum_type = _ACKTYPE
DESCRIPTOR.message_types_by_name['SignalRequest'] = _SIGNALREQUEST
DESCRIPTOR.message_types_by_name['SignalAck'] = _SIGNALACK
DESCRIPTOR.enum_types_by_name['RequestType'] = _REQUESTTYPE
DESCRIPTOR.enum_types_by_name['AckType'] = _ACKTYPE
_sym_db.RegisterFileDescriptor(DESCRIPTOR)

SignalRequest = _reflection.GeneratedProtocolMessageType('SignalRequest', (_message.Message,), dict(
  DESCRIPTOR = _SIGNALREQUEST,
  __module__ = 'signal_pb2'
  # @@protoc_insertion_point(class_scope:signal.SignalRequest)
  ))
_sym_db.RegisterMessage(SignalRequest)

SignalAck = _reflection.GeneratedProtocolMessageType('SignalAck', (_message.Message,), dict(
  DESCRIPTOR = _SIGNALACK,
  __module__ = 'signal_pb2'
  # @@protoc_insertion_point(class_scope:signal.SignalAck)
  ))
_sym_db.RegisterMessage(SignalAck)


# @@protoc_insertion_point(module_scope)